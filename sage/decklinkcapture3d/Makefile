#############################################################################
# Makefile for building: decklinkcapture
# Generated by qmake (2.01a) (Qt 4.8.4) on: Mon Jun 8 14:39:32 2015
# Project:  decklinkcapture.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile decklinkcapture.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -fpermissive -O2 -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -Iinclude -I../../include -I../../sam/src -I../../sam/src/client -I../../QUANTA/include -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L../../lib -lquanta -lsail -lm -ldl -L../../sam/lib -ljack -lsac -lQtGui -L/usr/lib64 -L/usr/X11R6/lib64 -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = decklinkcapture.cpp \
		include/DeckLinkAPIDispatch.cpp \
		../../src/fsClient.cpp \
		../../src/suil.cpp \
		../../src/sageMessage.cpp \
		../../src/misc.cpp moc_sam_client.cpp
OBJECTS       = decklinkcapture.o \
		DeckLinkAPIDispatch.o \
		fsClient.o \
		suil.o \
		sageMessage.o \
		misc.o \
		moc_sam_client.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		decklinkcapture.pro
QMAKE_TARGET  = decklinkcapture3d
DESTDIR       = 
TARGET        = decklinkcapture3d

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: decklinkcapture.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtNetwork.prl
	$(QMAKE) -o Makefile decklinkcapture.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile decklinkcapture.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/decklinkcapture1.0.0 || $(MKDIR) .tmp/decklinkcapture1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/decklinkcapture1.0.0/ && $(COPY_FILE) --parents decklinkcapture.h include/DeckLinkAPI.h ../../sam/src/client/sam_client.h .tmp/decklinkcapture1.0.0/ && $(COPY_FILE) --parents decklinkcapture.cpp include/DeckLinkAPIDispatch.cpp ../../src/fsClient.cpp ../../src/suil.cpp ../../src/sageMessage.cpp ../../src/misc.cpp .tmp/decklinkcapture1.0.0/ && (cd `dirname .tmp/decklinkcapture1.0.0` && $(TAR) decklinkcapture1.0.0.tar decklinkcapture1.0.0 && $(COMPRESS) decklinkcapture1.0.0.tar) && $(MOVE) `dirname .tmp/decklinkcapture1.0.0`/decklinkcapture1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/decklinkcapture1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_sam_client.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_sam_client.cpp
moc_sam_client.cpp: ../../sam/src/client/rtpsender.h \
		../../sam/src/client/sac_audio_interface.h \
		../../sam/src/client/sam_client.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../../sam/src/client/sam_client.h -o moc_sam_client.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

decklinkcapture.o: decklinkcapture.cpp decklinkcapture.h \
		ring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o decklinkcapture.o decklinkcapture.cpp

DeckLinkAPIDispatch.o: include/DeckLinkAPIDispatch.cpp include/DeckLinkAPI.h \
		include/LinuxCOM.h \
		include/DeckLinkAPITypes.h \
		include/DeckLinkAPIModes.h \
		include/DeckLinkAPIDiscovery.h \
		include/DeckLinkAPIConfiguration.h \
		include/DeckLinkAPIDeckControl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DeckLinkAPIDispatch.o include/DeckLinkAPIDispatch.cpp

fsClient.o: ../../src/fsClient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fsClient.o ../../src/fsClient.cpp

suil.o: ../../src/suil.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o suil.o ../../src/suil.cpp

sageMessage.o: ../../src/sageMessage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sageMessage.o ../../src/sageMessage.cpp

misc.o: ../../src/misc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o misc.o ../../src/misc.cpp

moc_sam_client.o: moc_sam_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sam_client.o moc_sam_client.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/toand/git/sage-dev/app/decklinkcapture3d/../../bin/ || $(MKDIR) $(INSTALL_ROOT)/home/toand/git/sage-dev/app/decklinkcapture3d/../../bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/home/toand/git/sage-dev/bin/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/home/toand/git/sage-dev/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home/toand/git/sage-dev/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home/toand/git/sage-dev/app/decklinkcapture3d/../../bin/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

